package com.example.pentestTools.controller;

import org.springframework.web.bind.annotation.*;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;

@RestController
@RequestMapping("/api")
public class PentestingController {

	@GetMapping("/test")
	public String testEndpoint() {
	    return "Backend is working!";
	}
	
    @PostMapping("/run")
    public Map<String, String> runTool(@RequestBody Map<String, String> request) {
        String tool = request.get("tool");
        String target = request.get("target");
        String command = getCommand(tool, target);

        Map<String, String> response = new HashMap<>();
        if (command != null) {
            try {
                ProcessBuilder processBuilder = new ProcessBuilder(command.split(" "));
                Process process = processBuilder.start();
                BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
                StringBuilder output = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    output.append(line).append("\n");
                }
                response.put("output", output.toString());
            } catch (Exception e) {
                response.put("output", "Error: " + e.getMessage());
            }
        } else {
            response.put("output", "Invalid tool selected.");
        }
        return response;
    }

    private String getCommand(String tool, String target) {
        switch (tool) {
            case "nmap":
                return "sudo nmap -A -Pn " + target;
            case "nikto":
                return "sudo nikto -h " + target;
            case "ping":
                return "sudo ping -c 4 " + target;
            case "netdiscover":
                return "sudo netdiscover -S -r " + target+"/16 -P ";
            default:
                return null;
        }
    }
}
